-- Create submitted_content_summaries table
create table "public"."submitted_content_summaries" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "title" text not null,
    "description" text,
    "page_name" text not null,
    "categories" text[] default '{}',
    "image_url" text,
    "published_date" timestamp with time zone not null default now(),
    "author_id" uuid not null,
    "is_published" boolean not null default true
);

-- Add primary key
alter table "public"."submitted_content_summaries" enable row level security;
create unique index submitted_content_summaries_pkey on public.submitted_content_summaries using btree (id);
alter table "public"."submitted_content_summaries" add constraint "submitted_content_summaries_pkey" primary key using index "submitted_content_summaries_pkey";

-- Add foreign key to auth.users
alter table "public"."submitted_content_summaries" add constraint "submitted_content_summaries_author_fkey" foreign key (author_id) references auth.users(id) on update cascade on delete cascade not valid;
alter table "public"."submitted_content_summaries" validate constraint "submitted_content_summaries_author_fkey";

-- Grant permissions for authenticated users
grant delete on table "public"."submitted_content_summaries" to "authenticated";
grant insert on table "public"."submitted_content_summaries" to "authenticated";
grant references on table "public"."submitted_content_summaries" to "authenticated";
grant select on table "public"."submitted_content_summaries" to "authenticated";
grant trigger on table "public"."submitted_content_summaries" to "authenticated";
grant truncate on table "public"."submitted_content_summaries" to "authenticated";
grant update on table "public"."submitted_content_summaries" to "authenticated";

-- Grant permissions for service role
grant delete on table "public"."submitted_content_summaries" to "service_role";
grant insert on table "public"."submitted_content_summaries" to "service_role";
grant references on table "public"."submitted_content_summaries" to "service_role";
grant select on table "public"."submitted_content_summaries" to "service_role";
grant trigger on table "public"."submitted_content_summaries" to "service_role";
grant truncate on table "public"."submitted_content_summaries" to "service_role";
grant update on table "public"."submitted_content_summaries" to "service_role";

-- Create RLS policy for authenticated users to see published content
create policy "Anyone can view published content"
on "public"."submitted_content_summaries"
as permissive
for select
to authenticated
using (is_published = true);

-- Create RLS policy for users to manage their own content
create policy "Users can manage their own content"
on "public"."submitted_content_summaries"
as permissive
for all
to authenticated
using (author_id = auth.uid());

-- Insert sample data
insert into "public"."submitted_content_summaries" 
(title, description, page_name, categories, published_date, author_id, is_published)
values 
(
    'This is a content title headline',
    'This is where the content description goes. It''s a block of text that describes the article content. The description is coming from a database.',
    'Page Name',
    array['Category 1', 'Category 2'],
    '2025-06-26'::timestamp,
    gen_random_uuid(),
    true
); 